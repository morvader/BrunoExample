meta {
  name: Get Users
  type: http
  seq: 2
}

get {
  url: {{url}}/users
  body: none
  auth: inherit
}

assert {
  res.body.length: eq 10
}

tests {
  
    // Verificar cÃ³digo de estado
    test("Status code is 200", () => {
      expect(res.status).to.equal(200);
    });
  
    // Verificar que la respuesta es un array
    test("Response is an array", () => {
      expect(res.body).to.be.an('array');
    });
  
    // Verificar que hay al menos 1 usuario
    test("Has at least one user", () => {
      expect(res.body.length).to.be.greaterThan(0);
    });
    test("Has 10 users", () => {
      expect(res.body.length).to.be.equal(10);
    });
  
    // Verificar la estructura del primer usuario
    test("User has correct structure", () => {
      const user = res.body[0];
      expect(user).to.have.property('id');
      expect(user).to.have.property('name');
      expect(user).to.have.property('email');
    });
  
}
